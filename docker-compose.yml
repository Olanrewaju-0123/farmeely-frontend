version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: farmeely-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: farmeely_db
      MYSQL_USER: farmeely_user
      MYSQL_PASSWORD: farmeely_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - farmeely-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: farmeely-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - farmeely-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: farmeely-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_NAME: farmeely_db
      DATABASE_USER: farmeely_user
      DATABASE_PASSWORD: farmeely_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      APP_PORT: 2025
      JWT_SECRET: your_super_secret_jwt_key_here_make_it_long_and_random
      PAYSTACK_SECRET_KEY: sk_test_your_paystack_secret_key
      PAYSTACK_PUBLIC_KEY: pk_test_your_paystack_public_key
      FRONTEND_BASE_URL: http://localhost:3000
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
    ports:
      - "2025:2025"
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - farmeely-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2025/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: farmeely-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: http://localhost:2025
      NEXT_PUBLIC_PAYSTACK_PUBLIC_KEY: pk_test_your_paystack_public_key
      NEXT_PUBLIC_APP_NAME: Farmeely
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - farmeely-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  farmeely-network:
    driver: bridge
